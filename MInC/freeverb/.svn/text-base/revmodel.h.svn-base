/*
// Reverb model declaration
//
// Written by Jezar at Dreampoint, June 2000
// http://www.dreampoint.co.uk
// This code is public domain
// Converted to C by Alastair M. Robinson January 2001
*/

#ifndef _revmodel_
#define _revmodel_

#include "comb.h"
#include "allpass.h"
#include "tuning.h"

struct RevModel {
	float	gain;
	float	roomsize,roomsize1;
	float	damp,damp1;
	float	wet,wet1,wet2;
	float	dry;
	float	width;
	float	mode;

	// The following are all declared inline 
	// to remove the need for dynamic allocation
	// with its subsequent error-checking messiness

	// Comb filters
	struct Comb	combL[numcombs];
	struct Comb	combR[numcombs];

	// Allpass filters
	struct AllPass	allpassL[numallpasses];
	struct AllPass	allpassR[numallpasses];

	// Buffers for the combs
	float	bufcombL1[combtuningL1];
	float	bufcombR1[combtuningR1];
	float	bufcombL2[combtuningL2];
	float	bufcombR2[combtuningR2];
	float	bufcombL3[combtuningL3];
	float	bufcombR3[combtuningR3];
	float	bufcombL4[combtuningL4];
	float	bufcombR4[combtuningR4];
	float	bufcombL5[combtuningL5];
	float	bufcombR5[combtuningR5];
	float	bufcombL6[combtuningL6];
	float	bufcombR6[combtuningR6];
	float	bufcombL7[combtuningL7];
	float	bufcombR7[combtuningR7];
	float	bufcombL8[combtuningL8];
	float	bufcombR8[combtuningR8];

	// Buffers for the allpasses
	float	bufallpassL1[allpasstuningL1];
	float	bufallpassR1[allpasstuningR1];
	float	bufallpassL2[allpasstuningL2];
	float	bufallpassR2[allpasstuningR2];
	float	bufallpassL3[allpasstuningL3];
	float	bufallpassR3[allpasstuningR3];
	float	bufallpassL4[allpasstuningL4];
	float	bufallpassR4[allpasstuningR4];
};


void revmodel_init(struct RevModel *rm);
void revmodel_mute(struct RevModel *rm);
void revmodel_processreplace(struct RevModel *rm,float *inputL, float *inputR, float *outputL, float *outputR, long numsamples, int skip);
void revmodel_processmix(struct RevModel *rm,float *inputL, float *inputR, float *outputL, float *outputR, long numsamples, int skip);
void revmodel_update(struct RevModel *rm);

void revmodel_setroomsize(struct RevModel *rm,float value);
float revmodel_getroomsize(struct RevModel *rm);
void revmodel_setdamp(struct RevModel *rm,float value);
float revmodel_getdamp(struct RevModel *rm);
void revmodel_setwet(struct RevModel *rm,float value);
float revmodel_getwet(struct RevModel *rm);
void revmodel_setdry(struct RevModel *rm,float value);
float revmodel_getdry(struct RevModel *rm);
void revmodel_setwidth(struct RevModel *rm,float value);
float revmodel_getwidth(struct RevModel *rm);
void revmodel_setmode(struct RevModel *rm,float value);
float revmodel_getmode(struct RevModel *rm);

#endif /*_revmodel_*/

/* ends */

